_id: spc_e4343fe209e547c8854603e55540444b
type: ApiSpec
parentId: wrk_195d01ec2fa84685861abfb82922783e
modified: 1663854202755
created: 1636401172569
fileName: My API
contents: |-
  openapi: 3.0.1
  info:
    title: My API
    version: '1.0'
    description: my api for users and game scores
    termsOfService: https://www.example.com/tos
    contact:
      email: support@example.com
      name: Support Team
      url: https://www.example.com/support
    license:
      name: User License
      url: https://www.example.com/license
  servers:
    - url: https://my-json-server.typicode.com/bearc0025/api
      variables: {}
      description: My fake server for git repo
  paths:
    /users:
      summary: user base level opertations
      description: fetch all users, add new user...
      get:
        summary: fetch all users
        description: return users from server
        operationId: fetchUsers
        responses:
          2XX:
            $ref: '#/components/responses/UserArrayResponseBody'
          default:
            description: Default error sample response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ErrorResponse'
        tags:
          - users
      post:
        summary: create a new user
        description: store user on server
        operationId: createUser
        requestBody:
          $ref: '#/components/requestBodies/UserPostBody'
        responses:
          '201':
            $ref: '#/components/responses/UserRespBody'
          default:
            description: Default error sample response
        tags:
          - users
    /users/{userId}:
      summary: user operations
      description: fetch, update, delete a user
      parameters:
        - $ref: '#/components/parameters/UserId'
      get:
        summary: fetch one user
        description: retrieve a user by user id from the server
        operationId: fetchUser
        responses:
          '2XX':
            $ref: '#/components/responses/UserRespBody'
          default:
            description: Default error sample response
        tags:
          - users
      delete:
        summary: delete one user
        description: delete a user by user id from the server
        operationId: deleteUser
        responses:
          '2XX':
            $ref: '#/components/responses/UserDeleteBody'
          default:
            description: Default error sample response
        tags:
          - users
        security:
          - BAuth: []
  components:
    securitySchemes:
      BAuth:
        type: http
        scheme: basic
    parameters:
      UserId:
        name: userId
        in: path
        required: true
        description: user id for user operations
        schema:
          type: string
          example: qwerty  
    responses:
      UserArrayResponseBody:
        description: multiple User bodies
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserArray'
      UserRespBody:
        description: single User body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullUser'
      UserDeleteBody:
        description: deleted User
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyUser'
    requestBodies:
      UserPostBody:
        description: body of new user
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostNewUser'
    schemas:
      UserArray:
        type: array
        items:
          $ref: '#/components/schemas/FullUser'
      EmptyUser:
        type: object
      PostNewUser:
        type: object
        properties:
          username:
            type: string
            example: bear2
          score:
            type: integer
            example: 670
          active:
            type: boolean
            example: true
      FullUser:
        allOf:
          - $ref: '#/components/schemas/PostNewUser'
          - type: object
            properties:
              id:
                type: string
                example: 1234abc7
      ErrorResponse:
        type: object
        properties:
          success:
            type: boolean
            example: false
          message:
            type: string
            example: we couldn't find...
contentType: yaml
